{"version":3,"sources":["components/Header/Header.js","components/PictureCard/PictureCard.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","children","PictureCard","onClick","setClicked","id","alt","name","src","image","Wrapper","correctGuesses","highScore","clickMessage","App","state","pictures","_this","clickedPicture","filter","picture","clicked","console","log","i","length","setState","sort","b","Math","random","_this2","this","components_Wrapper_Wrapper","components_Header_Header","map","components_PictureCard_PictureCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wgCAKeA,SAFA,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMK,YCQtCC,SARK,SAAAN,GAAK,OACvBC,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMP,EAAMQ,WAAWR,EAAMS,KAAKL,UAAU,iBACxDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKO,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,YCDxBC,SAFC,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,mBCIrDU,SAAiB,GACjBC,EAAY,EACZC,EAAe,0FA2GJC,6MAvGbC,MAAQ,CACNC,WACAL,iBACAC,YACAC,kBAGFT,WAAa,SAAAC,GACX,IAAMW,EAAWC,EAAKF,MAAMC,SAEtBE,EAAiBF,EAASG,OAAO,SAAAC,GAAO,OAAIA,EAAQf,KAAOA,IAGjE,GAAIa,EAAe,GAAGG,QAAS,CAE7BC,QAAQC,IAAI,oBAAsBZ,GAClCW,QAAQC,IAAI,eAAiBX,GAE7BD,EAAiB,EACjBE,EAAe,8CAEf,IAAK,IAAIW,EAAI,EAAIA,EAAIR,EAASS,OAASD,IACrCR,EAASQ,GAAGH,SAAU,EAGxBJ,EAAKS,SAAS,CAACb,iBACfI,EAAKS,SAAS,CAACf,mBACfM,EAAKS,SAAS,CAACV,kBAEV,GAAIL,EAAiB,GAE1BO,EAAe,GAAGG,SAAU,EAE5BR,EAAe,mCADfF,EAGqBC,IACnBA,EAAYD,EACZM,EAAKS,SAAS,CAACd,eAIjBI,EAASW,KAAK,SAAS7B,EAAE8B,GAAG,MAAO,GAAMC,KAAKC,WAE9Cb,EAAKS,SAAS,CAACV,aACfC,EAAKS,SAAS,CAACf,mBACfM,EAAKS,SAAS,CAACb,qBAEV,CAELK,EAAe,GAAGG,SAAU,EAC5BV,EAAiB,EACjBE,EAAe,6DACfD,EAAY,GACZK,EAAKS,SAAS,CAACd,cAEf,IAAK,IAAIY,EAAI,EAAIA,EAAIR,EAASS,OAASD,IACrCR,EAASQ,GAAGH,SAAU,EAGxBL,EAASW,KAAK,SAAS7B,EAAE8B,GAAG,MAAO,GAAMC,KAAKC,WAE9Cb,EAAKS,SAAS,CAACV,aACfC,EAAKS,SAAS,CAACf,mBACfM,EAAKS,SAAS,CAACb,2FAKV,IAAAkB,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KAEEpC,EAAAC,EAAAC,cAACmC,EAAD,gCAEArC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXgC,KAAKjB,MAAMF,cAGdhB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,oBACoBgC,KAAKjB,MAAMJ,eAC7Bd,EAAAC,EAAAC,cAAA,WAFF,eAGeiC,KAAKjB,MAAMH,WAG1Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZgC,KAAKjB,MAAMC,SAASmB,IAAI,SAAAf,GAAO,OAChCvB,EAAAC,EAAAC,cAACqC,EAAD,CACAhC,WAAY2B,EAAK3B,WACjBC,GAAIe,EAAQf,GACZgC,IAAKjB,EAAQf,GACbE,KAAMa,EAAQb,KACdE,MAAOW,EAAQX,oBA9FT6B,mBCNlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f93d747a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => <h1 className=\"title\">{props.children}</h1>;\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./PictureCard.css\";\r\n\r\nconst PictureCard = props => (\r\n  <div onClick={() => props.setClicked(props.id)} className=\"card col-md-3\">\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default PictureCard;\r\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React, { Component } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport PictureCard from \"./components/PictureCard\";\r\nimport Wrapper from \"./components/Wrapper/Wrapper\";\r\nimport pictures from \"./pictures.json\";\r\nimport \"./App.css\";\r\n\r\nlet correctGuesses = 0;\r\nlet highScore = 0;\r\nlet clickMessage = \"Click on a hero to gain points! But, BEWARE, click on the same hero twice and you lose!\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    pictures,\r\n    correctGuesses,\r\n    highScore,\r\n    clickMessage\r\n  };\r\n\r\n  setClicked = id => {\r\n    const pictures = this.state.pictures;\r\n    \r\n    const clickedPicture = pictures.filter(picture => picture.id === id);\r\n\r\n    // If statement for already clicked picture, game over\r\n    if (clickedPicture[0].clicked) {\r\n\r\n      console.log(\"Correct Guesses: \" + correctGuesses);\r\n      console.log(\"High Score: \" + highScore);\r\n\r\n      correctGuesses = 0;\r\n      clickMessage = \"Sorry! This hero's turn has already passed!\";\r\n\r\n      for (let i = 0 ; i < pictures.length ; i++) {\r\n        pictures[i].clicked = false;\r\n      }\r\n\r\n      this.setState({clickMessage});\r\n      this.setState({correctGuesses});\r\n      this.setState({pictures});\r\n\r\n    } else if (correctGuesses < 11) {\r\n\r\n      clickedPicture[0].clicked = true;\r\n      correctGuesses++;\r\n      clickMessage = \"So far, so good! Keep rolling!\";\r\n\r\n      if (correctGuesses > highScore) {\r\n        highScore = correctGuesses;\r\n        this.setState({highScore});\r\n      }\r\n\r\n      // Shuffle array\r\n      pictures.sort(function(a,b){return 0.5 - Math.random()});\r\n\r\n      this.setState({pictures});\r\n      this.setState({correctGuesses});\r\n      this.setState({clickMessage});\r\n\r\n    } else {\r\n\r\n      clickedPicture[0].clicked = true;\r\n      correctGuesses = 0;\r\n      clickMessage = \"Huzzah! You've completed the round. Roll Initiative again!\";\r\n      highScore = 12;\r\n      this.setState({highScore});\r\n\r\n      for (let i = 0 ; i < pictures.length ; i++) {\r\n        pictures[i].clicked = false;\r\n      }\r\n      \r\n      pictures.sort(function(a,b){return 0.5 - Math.random()});\r\n\r\n      this.setState({pictures});\r\n      this.setState({correctGuesses});\r\n      this.setState({clickMessage});\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n\r\n        <Header>Vox Machina Memory Game</Header>\r\n\r\n        <h3 className=\"score-summary\">\r\n          {this.state.clickMessage}\r\n        </h3>\r\n\r\n        <h3 className=\"score-summary card-header\">\r\n          Correct Guesses: {this.state.correctGuesses}\r\n          <br />\r\n          High Score: {this.state.highScore}\r\n        </h3>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {this.state.pictures.map(picture => (\r\n            <PictureCard\r\n            setClicked={this.setClicked}\r\n            id={picture.id}\r\n            key={picture.id}\r\n            name={picture.name}\r\n            image={picture.image}\r\n            />\r\n          ))}\r\n          </div>\r\n        </div>\r\n    \r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}